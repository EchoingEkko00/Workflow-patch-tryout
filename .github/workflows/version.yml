name: Automatic Release

on:
  push:
    branches:
      - main
    paths:
      - '**/*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Git
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

    - name: Bump version
      id: bump_version
      run: |
        chmod +x version.sh
        ./version.sh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Read version
      id: read_version
      run: echo "VERSION=$(cat version.txt | tr -d '\n')" >> $GITHUB_ENV

    - name: Get modified files
      id: get_modified_files
      run: |
        MODIFIED_FILES=$(git diff --name-only HEAD~1 | tr '\n' ' ')
        echo "MODIFIED_FILES=$MODIFIED_FILES" >> $GITHUB_ENV

    - name: Copy modified files to Web folder
      run: |
        mkdir -p Web
        IFS=' ' read -r -a FILES <<< "${{ env.MODIFIED_FILES }}"
        for FILE in "${FILES[@]}"; do
          cp --parents "$FILE" Web
        done

    - name: Compress Web folder
      run: |
        zip -r Web.zip Web

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ env.VERSION }}"
        release_name: "v${{ env.VERSION }}"
        body: |
          Automatic release for version v${{ env.VERSION }}

          ## Modified Files:
          ${{ env.MODIFIED_FILES }}
        draft: false
        prerelease: false

    - name: Upload Web.zip as asset
      if: success()
      run: |
        gh release upload "v${{ env.VERSION }}" "Web.zip" --repo ${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        
    - name: Save version
      id: save_version
      run: |
        chmod +x version.sh
        ./version.sh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
